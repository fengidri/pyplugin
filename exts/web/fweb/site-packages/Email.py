# -*- coding:utf-8 -*-
#    author    :   丁雪峰
#    time      :   2015-05-08 15:17:58
#    email     :   fengidri@yeah.net
#    version   :   1.0.1

from email.mime.text import MIMEText
import smtplib
import imaplib
import email

class NOFolder(Exception): pass

class Email(object):
    def __init__(self, smtphost, imaphost, sender, to, pwd):
        self.sender   = sender
        self.to       = to
        self.smtphost = smtphost
        self.imaphost = imaphost
        self.pwd      = pwd
        self.smtp     = None
        self.imap     = None
        self.mailbox  = 'INBOX'
        #创建一个实例，这里设置邮件格式
        #self.msg = MIMEText(content,_subtype=msgtype,_charset='UTF8')

    def Msg(self, subject, msg, msgtype = 'plain'):
        self.msg            = MIMEText(msg,_subtype=msgtype,_charset='UTF8')
        self.msg['Subject'] = subject
        self.msg['From']    = self.sender
        self.msg['To']      = self.to

    def Send(self):
        if self.smtp == None:
            self.smtp = smtplib.SMTP()
            self.smtp.set_debuglevel(1)
            self.smtp.connect(self.smtphost)
            self.smtp.login(self.sender, self.pwd)

        self.smtp.sendmail(self.sender, self.to, self.msg.as_string())

    def Search(self, criterion='Unseen', readonly = True):
        if self.imap == None:
            self.imap = imaplib.IMAP4(self.imaphost)
            self.imap.login(self.sender, self.pwd)
        imap = self.imap

        if readonly:
            status, err = imap.select(self.mailbox, imap.readonly)
        else:
            status, err = imap.select(self.mailbox)

        if status == 'NO':
            raise NOFolder(err)

        status, ids = imap.search('UTF-8', criterion)
        return ids[0].split()

    def Fetch(self, IDSET):
        if self.imap == None:
            self.imap = imaplib.IMAP4(self.imaphost)
            self.imap.login(self.sender, self.pwd)
        imap = self.imap

        if isinstance(IDSET, list):
            IDSET = ','.join(IDSET)

        status, mdata = imap.fetch(IDSET, "(RFC822)")
        if status != 'OK':
            return None

        ms = []

        i = 0
        while i < len(mdata):
            e = email.message_from_string(mdata[i][1])
            ms.append((mdata[i][0].split()[0], e))
            i += 2
        return ms

    def SetSeen(self, IDSET):
        if self.imap == None:
            self.imap = imaplib.IMAP4(self.imaphost)
            self.imap.login(self.sender, self.pwd)
        imap = self.imap

        if isinstance(IDSET, list):
            IDSET = ','.join(IDSET)

        imap.store(IDSET, '+FLAGS', '\\seen')

if __name__ == "__main__":
    pass

